---
driver:
  name: vagrant
  customize:
    memory: 2048
    cpus: 2

provisioner:
  name: chef_infra
  product_name: <%= ENV['CHEF_PRODUCT_NAME'] || 'chef' %>
  product_version: <%= ENV['CHEF_VERSION'] || 'latest' %>
  enforce_idempotency: true
  multiple_converge: 2
  deprecations_as_errors: true
  chef_license: accept-no-persist

verifier:
  name: inspec

platforms:
  - name: almalinux-8
  - name: almalinux-9
  - name: debian-12
  - name: rockylinux-8
  - name: rockylinux-9
  - name: ubuntu-20.04
  - name: ubuntu-22.04
  - name: ubuntu-24.04

suites:
  - name: installation_script
    excludes:
      - 'almalinux'
      - 'amazonlinux'
      - 'rockylinux-9'
    run_list:
      - recipe[docker_test::installation_script]

  - name: installation_package
    run_list:
      - recipe[docker_test::installation_package]
    excludes:
      - 'amazonlinux-2'

  - name: installation_tarball
    run_list:
      - recipe[docker_test::installation_tarball]

  - name: install_and_stop
    run_list:
      - recipe[docker_test::install_and_stop]

  ##################
  # resource testing
  ##################
  - name: resources
    provisioner:
      enforce_idempotency: false
      multiple_converge: 1
    run_list:
      - recipe[docker_test::default]
      - recipe[docker_test::image]
      - recipe[docker_test::container]
      - recipe[docker_test::exec]
      - recipe[docker_test::plugin]
      - recipe[docker_test::image_prune]
      - recipe[docker_test::volume_prune]

  - name: network
    provisioner:
      enforce_idempotency: false
      multiple_converge: 1
    run_list:
      - recipe[docker_test::default]
      - recipe[docker_test::network]

  - name: volume
    provisioner:
      enforce_idempotency: false
      multiple_converge: 1
    run_list:
      - recipe[docker_test::default]
      - recipe[docker_test::volume]
      - recipe[docker_test::volume_prune]

  - name: registry
    provisioner:
      enforce_idempotency: false
      multiple_converge: 1
    run_list:
      - recipe[docker_test::default]
      - recipe[docker_test::registry]

  ####################
  # swarm testing
  ####################

  - name: swarm
    driver:
      network:
        - ["private_network", {ip: "192.168.56.10"}]
    provisioner:
      enforce_idempotency: false
      multiple_converge: 1
    attributes:
      docker:
        swarm:
          init:
            advertise_addr: '192.168.56.10'
            listen_addr: '0.0.0.0:2377'
          rotate_token: true
          service:
            name: 'web'
            image: 'nginx:latest'
            publish: ['80:80']
            replicas: 2
    run_list:
      - recipe[docker_test::swarm]
      - recipe[docker_test::swarm_service]

  - name: swarm_worker
    driver:
      network:
        - ["private_network", {ip: "192.168.56.11"}]
    provisioner:
      enforce_idempotency: false
      multiple_converge: 1
    attributes:
      docker:
        swarm:
          join:
            manager_ip: '192.168.56.10:2377'
            advertise_addr: '192.168.56.11'
            listen_addr: '0.0.0.0:2377'
            # Token will be obtained from the manager node
    run_list:
      - recipe[docker_test::swarm_worker]

  #############################
  # quick service smoke testing
  #############################

  - name: smoke
    run_list:
      - recipe[docker_test::smoke]

  ###############################
  # docker_swarm resources
  ###############################
  - name: swarm
    includes:
      - ubuntu-22.04
    provisioner:
      enforce_idempotency: false
      multiple_converge: 1
    attributes:
      docker:
        swarm:
          init:
            advertise_addr: '127.0.0.1'
            listen_addr: '0.0.0.0:2377'
          rotate_token: true
          service:
            name: 'web'
            image: 'nginx:latest'
            publish: ['80:80']
            replicas: 2
    run_list:
      - recipe[docker_test::swarm]
      - recipe[docker_test::swarm_service]
